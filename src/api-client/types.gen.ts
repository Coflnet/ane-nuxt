// This file is auto-generated by @hey-api/openapi-ts

export type ActiveSubscription = {
  id?: string | null;
  product?: string | null;
  createdAt?: string;
  endsAt?: string | null;
};

export type FilterInfo = {
  name?: string | null;
  value?: string | null;
};

export type FilterMatch = {
  listenerId?: number | null;
  listingData?: Listing;
  matchedAt?: string | null;
};

export type FilterOptions = {
  filterType?: FilterType;
  options?: Array<StringStringKeyValuePair> | null;
};

export type FilterType = 'Options' | 'NumberRange' | 'Text' | 'Date' | 'Radius' | 'Bool' | 'MultiSelect';

export type Listing = {
  priceKind?: PriceKind;
  platform?: Platform;
  id?: string | null;
  title?: string | null;
  descriptionShort?: string | null;
  description?: string | null;
  category?: string | null;
  street?: string | null;
  locality?: string | null;
  region?: string | null;
  country?: string | null;
  imageUrls?: Array<string> | null;
  price?: number | null;
  currency?: string | null;
  contact?: string | null;
  userId?: string | null;
  latitude?: number | null;
  longitude?: number | null;
  shipping?: string | null;
  returnPolicy?: string | null;
  attributes?: {
    [key: string]: string;
  } | null;
  foundAt?: string | null;
  createdAt?: string | null;
  soldBefore?: string | null;
  commercial?: boolean | null;
};

export type ListingListener = {
  targetType?: TargetType;
  state?: SearchState;
  userId?: string | null;
  id?: number | null;
  filters?: Array<FilterInfo> | null;
  target?: string | null;
  name?: string | null;
  matchCount?: number | null;
};

export type Platform = 'Unknown' | 'Ebay' | 'Kleinanzeigen' | 'Marktplaats' | 'Willhaben' | 'Shpock' | 'MarktDe' | 'Vinted' | 'Facebook' | 'Poshmark' | 'Mercari' | 'Depop' | 'Mobile' | 'AutoScout24' | 'WirKaufenDeinAuto' | 'AutoDe' | 'Gebrauchtwagen12';

export type PriceKind = 'Unknown' | 'BuyItemNow' | 'Auction' | 'Negotiatable' | 'IncludesTax';

export type ProblemDetails = {
  type?: string | null;
  title?: string | null;
  status?: number | null;
  detail?: string | null;
  instance?: string | null;
  [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | undefined;
};

export type SearchState = 'None' | 'Disabled';

export type StringStringKeyValuePair = {
  key?: string | null;
  value?: string | null;
};

export type SubscriptionRequest = {
  planSlug?: string | null;
  redirectSuccess?: string | null;
  redirectCancel?: string | null;
};

export type TargetType = 'Unknown' | 'FireBase' | 'DiscordWebhook' | 'Email' | 'WhatsApp';

export type TokenContainer = {
  authToken?: string | null;
};

export type User = {
  id?: string;
  name?: string | null;
  email?: string | null;
  locale?: string | null;
  authProviderId?: string | null;
  createdAt?: string;
  lastSeenAt?: string;
};

export type LoginFirebaseData = {
  body: TokenContainer;
  path?: never;
  query?: never;
  url: '/api/auth/firebase';
};

export type LoginFirebaseErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type LoginFirebaseError = LoginFirebaseErrors[keyof LoginFirebaseErrors];

export type LoginFirebaseResponses = {
  /**
   * OK
   */
  200: TokenContainer;
};

export type LoginFirebaseResponse = LoginFirebaseResponses[keyof LoginFirebaseResponses];

export type GetFiltersData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/filters/user';
};

export type GetFiltersErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetFiltersError = GetFiltersErrors[keyof GetFiltersErrors];

export type GetFiltersResponses = {
  /**
   * OK
   */
  200: Array<ListingListener>;
};

export type GetFiltersResponse = GetFiltersResponses[keyof GetFiltersResponses];

export type GetOptionsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/filters/options';
};

export type GetOptionsErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetOptionsError = GetOptionsErrors[keyof GetOptionsErrors];

export type GetOptionsResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: FilterOptions;
  };
};

export type GetOptionsResponse = GetOptionsResponses[keyof GetOptionsResponses];

export type AddFilterData = {
  body?: ListingListener;
  path?: never;
  query?: never;
  url: '/api/filters';
};

export type AddFilterErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type AddFilterError = AddFilterErrors[keyof AddFilterErrors];

export type AddFilterResponses = {
  /**
   * OK
   */
  200: ListingListener;
};

export type AddFilterResponse = AddFilterResponses[keyof AddFilterResponses];

export type DeleteFilterData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: '/api/filters/{id}';
};

export type DeleteFilterErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type DeleteFilterError = DeleteFilterErrors[keyof DeleteFilterErrors];

export type DeleteFilterResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type DeleteFilterWithTokenData = {
  body?: never;
  path: {
    id: number;
    token: string;
  };
  query?: never;
  url: '/api/filters/{id}/token/{token}';
};

export type DeleteFilterWithTokenErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type DeleteFilterWithTokenError = DeleteFilterWithTokenErrors[keyof DeleteFilterWithTokenErrors];

export type DeleteFilterWithTokenResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetFilterByTokenData = {
  body?: never;
  path: {
    id: number;
    token: string;
  };
  query?: never;
  url: '/api/filters/{id}/token/{token}';
};

export type GetFilterByTokenErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetFilterByTokenError = GetFilterByTokenErrors[keyof GetFilterByTokenErrors];

export type GetFilterByTokenResponses = {
  /**
   * OK
   */
  200: ListingListener;
};

export type GetFilterByTokenResponse = GetFilterByTokenResponses[keyof GetFilterByTokenResponses];

export type TestFilterData = {
  body?: ListingListener;
  path?: never;
  query?: never;
  url: '/api/filters/test';
};

export type TestFilterErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type TestFilterError = TestFilterErrors[keyof TestFilterErrors];

export type TestFilterResponses = {
  /**
   * OK
   */
  200: Array<Listing>;
};

export type TestFilterResponse = TestFilterResponses[keyof TestFilterResponses];

export type GetMatchesData = {
  body?: never;
  path?: never;
  query?: {
    before?: string;
    limit?: number;
    after?: string;
  };
  url: '/api/matches';
};

export type GetMatchesErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetMatchesError = GetMatchesErrors[keyof GetMatchesErrors];

export type GetMatchesResponses = {
  /**
   * OK
   */
  200: Array<FilterMatch>;
};

export type GetMatchesResponse = GetMatchesResponses[keyof GetMatchesResponses];

export type GetListingData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: '/listing/{id}';
};

export type GetListingErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetListingError = GetListingErrors[keyof GetListingErrors];

export type GetListingResponses = {
  /**
   * OK
   */
  200: Listing;
};

export type GetListingResponse = GetListingResponses[keyof GetListingResponses];

export type GetSubscriptionData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/payment/subscription';
};

export type GetSubscriptionErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetSubscriptionError = GetSubscriptionErrors[keyof GetSubscriptionErrors];

export type GetSubscriptionResponses = {
  /**
   * OK
   */
  200: Array<ActiveSubscription>;
};

export type GetSubscriptionResponse = GetSubscriptionResponses[keyof GetSubscriptionResponses];

export type SubscribeData = {
  body?: SubscriptionRequest;
  path?: never;
  query?: never;
  url: '/api/payment/subscription';
};

export type SubscribeErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type SubscribeError = SubscribeErrors[keyof SubscribeErrors];

export type SubscribeResponses = {
  /**
   * OK
   */
  200: string;
};

export type SubscribeResponse = SubscribeResponses[keyof SubscribeResponses];

export type CancelSubscriptionData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payment/subscription/{id}';
};

export type CancelSubscriptionErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type CancelSubscriptionError = CancelSubscriptionErrors[keyof CancelSubscriptionErrors];

export type CancelSubscriptionResponses = {
  /**
   * OK
   */
  200: string;
};

export type CancelSubscriptionResponse = CancelSubscriptionResponses[keyof CancelSubscriptionResponses];

export type DoRedirectData = {
  body?: never;
  path?: never;
  query?: {
    url?: string;
  };
  url: '/api/redirect';
};

export type DoRedirectErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type DoRedirectError = DoRedirectErrors[keyof DoRedirectErrors];

export type DoRedirectResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/user/me';
};

export type GetMeErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type GetMeError = GetMeErrors[keyof GetMeErrors];

export type GetMeResponses = {
  /**
   * OK
   */
  200: User;
};

export type GetMeResponse = GetMeResponses[keyof GetMeResponses];

export type UpdateMeData = {
  body?: User;
  path?: never;
  query?: never;
  url: '/api/user/me';
};

export type UpdateMeErrors = {
  /**
   * Bad Request
   */
  400: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * More info about the error, may sometimes be sufficient to display to user
     */
    message?: string;
  };
  /**
   * Not Found
   */
  404: ProblemDetails;
  /**
   * Internal Server Error
   */
  500: {
    /**
     * Human readable id for this kind of error
     */
    slug?: string;
    /**
     * Unknown error occured
     */
    message?: string;
    /**
     * Id for the error report with this id
     */
    trace?: string;
  };
};

export type UpdateMeError = UpdateMeErrors[keyof UpdateMeErrors];

export type UpdateMeResponses = {
  /**
   * OK
   */
  200: User;
};

export type UpdateMeResponse = UpdateMeResponses[keyof UpdateMeResponses];

export type ClientOptions = {
  baseURL: 'https://ane.coflnet.com' | (string & {});
};